<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Dominik Ritz</title>
	<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet'>
	<style>
		body {
			background-color: #222;
			overflow: hidden;
			margin: 0;
			padding: 0;
			height: 100vh;
			display: flex;
			align-items: center;
			justify-content: center;
			font-family: 'Orbitron', sans-serif;
		}

		.star {
			position: absolute;
			background-color: #fff;
			width: 2px;
			height: 2px;
			border-radius: 50%;
			z-index: -1;
		}

		#stars {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background: transparent;
		}

		#name {
			font-size: 7vw;
			font-family: 'Montserrat',serif;
			font-weight: bold;
			text-align: center;
			width: max-content;
			background: linear-gradient(90deg, #8e2de2, #4a00e0, #23d5ab);
			background-size: 200% auto;
			animation: gradient 5s ease infinite;
			z-index: 1;
		}


		#intro {
			font-size: 4vw;
			font-family: 'Montserrat',serif;
			font-weight: bold;
			text-align: center;
			color: #fff;
			position: relative;
			z-index: 1;
		}

		@keyframes gradient {
			0% { background-position: 0 50%; }
			50% { background-position: 100% 50%; }
			100% { background-position: 0 50%; }
		}

		#links {
			position: absolute;
			bottom: 20px;
			width: 100%;
			text-align: center;
		}

		#links a {
			color: transparent;
			margin: 0 0.3vw;
		}

		.links-icons:hover path {
			fill: #6D18E2;
			transition: fill 0.4s ease;
		}

		/* Mobile responsive */
		@media (max-width: 600px) {
			#name {
				font-size: 64px;
			}

			#intro {
				font-size: 48px;
			}

			#links svg {
				width: 50px;
				height: 50px;
				margin-left: 5px;
				margin-right: 5px;
			}
		}
	</style>
	<script>
		window.onload = function() {
			const isMobile = window.innerWidth <= 600;

			let stars = document.getElementById('stars');
			for (let i = 0; i < (window.innerWidth / 3840) * 1000; i++) {
				let star = document.createElement('div');
				star.className = 'star astro-J7PV25F6';
				star.style.top = Math.random() * 100 + '%';
				star.style.left = Math.random() * 100 + '%';
				stars.appendChild(star);
			}

			// <-- Predetermine size of text so that the typewriter effect aligns from left side of the div and fills the space -->
			// Get the text to measure
			const text = "Dominik Ritz";

			// Create a temporary hidden element to measure the width
			const hiddenElement = document.createElement("div");
			hiddenElement.style.visibility = "hidden";
			hiddenElement.style.position = "absolute";
			hiddenElement.style.whiteSpace = "nowrap";
			hiddenElement.style.fontSize = "7vw"
			hiddenElement.style.fontFamily = "Montserrat"
			hiddenElement.style.fontWeight = "bold"
			if(isMobile) {
				hiddenElement.style.wordWrap = "break-word"
			}
			hiddenElement.style.wordWrap =
			hiddenElement.innerText = text;

			// Append the hidden element to the document body
			document.body.appendChild(hiddenElement);

			// Get the width of the hidden element
			const textWidth = hiddenElement.getBoundingClientRect().width;

			// Get the height of the hidden element
			const textHeight = hiddenElement.getBoundingClientRect().height

			// Remove the hidden element from the document body
			document.body.removeChild(hiddenElement);

			// Create the actual text container element with the measured width
			const textContainer = document.getElementById("text-container");
			textContainer.style.width = textWidth + "px";
			if(isMobile) {
				textContainer.style.height = textHeight + "px";
			}


			// <-- Typing animation -->
			const nameElement = document.getElementById('name');
			const nameText = nameElement.innerHTML;
			if(isMobile) {
				nameElement.style.wordWrap = "break-word"
			}
			nameElement.innerHTML = 'D';

			let currentIndex = 1;
			let typingInterval = setInterval(() => {
				if (currentIndex < nameText.length) {
					nameElement.innerHTML += nameText[currentIndex];
					currentIndex++;
				} else {
					clearInterval(typingInterval);
					// Convert the "hightlighting" gradient to the gradient on the text itself
					nameElement.style.webkitTextFillColor = 'transparent';
					nameElement.style.webkitBackgroundClip = 'text';
					nameElement.style.width = 'auto';
				}
			}, 200);
		}
	</script>
</head>
	<body>
		<div id="stars"></div>
		<div id="text-container">
			<div id="intro">Hi, I'm</div>
			<div id="name">Dominik Ritz</div>
		</div>
		<div id="links">
			<!-- LinkedIn -->
			<a href="https://www.linkedin.com/in/dominik-ritz/" target="_blank">
				<svg class="links-icons" xmlns="http://www.w3.org/2000/svg" width="2vw" height="2vw" viewBox="0 0 24 24"><path fill="white" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/></svg>
			</a>
			<!-- GitHub -->
			<a href="https://github.com/Dygitz" target="_blank">
				<svg class="links-icons" xmlns="http://www.w3.org/2000/svg" width="2vw" height="2vw" viewBox="0 0 24 24"><path fill="white" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-4.466 19.59c-.405.078-.534-.171-.534-.384v-2.195c0-.747-.262-1.233-.55-1.481 1.782-.198 3.654-.875 3.654-3.947 0-.874-.312-1.588-.823-2.147.082-.202.356-1.016-.079-2.117 0 0-.671-.215-2.198.82-.64-.18-1.324-.267-2.004-.271-.68.003-1.364.091-2.003.269-1.528-1.035-2.2-.82-2.2-.82-.434 1.102-.16 1.915-.077 2.118-.512.56-.824 1.273-.824 2.147 0 3.064 1.867 3.751 3.645 3.954-.229.2-.436.552-.508 1.07-.457.204-1.614.557-2.328-.666 0 0-.423-.768-1.227-.825 0 0-.78-.01-.055.487 0 0 .525.246.889 1.17 0 0 .463 1.428 2.688.944v1.489c0 .211-.129.459-.528.385-3.18-1.057-5.472-4.056-5.472-7.59 0-4.419 3.582-8 8-8s8 3.581 8 8c0 3.533-2.289 6.531-5.466 7.59z"/></svg>
			</a>
		</div>
	</body>
</html>